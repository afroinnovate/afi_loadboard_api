name: deploy dev

on:
  push:
    branches:
      - develop
    paths:
      - 'afi_loadboad_api/Services/Auth.API/**'
  workflow_dispatch:
    inputs:
      deployService:
        description: 'Which service to deploy?'
        required: true
        default: 'Auth.API'
  
env:
  REPOSITORY: 'tangotew/afi-loadboard-api'

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && contains(github.ref, 'develop')) || github.event_name == 'workflow_dispatch' 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.ORG_GITHUB_TOKEN }

      - name: Extract tag based on environment from manifest.yaml
        if: github.ref == 'refs/heads/develop' && github.event_name == 'workflow_dispatch'
        run: |
          TAG=$(grep -A1 "dev:" manifest.yaml | grep 'version:' | awk '{print $2}')
          echo "RELEASE_TAG=${{env.REPOSITORY}}:${TAG}" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Use SHA for tag if not main
        if: github.event_name == 'push' && github.ref != 'refs/heads/develop'
        run: echo "RELEASE_TAG=${{ env.REPOSITORY}}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Set Git Config
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop'
        run: |
          git config --global --replace-all user.email 'GitHub Action'
          git config --global --replace-all user.name 'actions@github.com'
          
      - name: Check if Git tag exists
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop'
        id: check_tag
        run: |
          TAG_NAME=${{ env.TAG }}
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/$TAG_NAME)
          if [[ -z "$TAG_EXISTS" ]]; then
            echo "Tag does not exist"
            echo "tag-exists=false"  >> "$GITHUB_OUTPUT"
          else
            echo "Tag exists"
            echo "tag-exists=true" >> "$GITHUB_OUTPUT"
          fi
        continue-on-error: true

      - name: Push Git Tag
        if: "${{ steps.check_tag.outputs.tag-exists == 'false' && github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop' }}"
        run: |
          git tag -a ${{ env.TAG }} -m "Release ${{ env.TAG }}"
          git push --no-verify origin refs/tags/${{ env.TAG }}

      - name: Create PreRelease
        if: "${{ steps.check_tag.outputs.tag-exists == 'false' && github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop' }}"
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.ORG_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "'${{ env.TAG }}'",
              "name": "Prerelease '${{ env.TAG }}'",
              "body": "Changes in this Release\n- Added Automation for docker build and push\n- Added autodeployment pipeline",
              "draft": false,
              "prerelease": true
            }'

    outputs:
      TAG: "${{env.RELEASE_TAG}}"
      TAG_EXISTS: "${{ steps.check_tag.outputs.tag-exists }}"

  build:
    needs: [prepare]
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine tag for image
        run: echo "RELEASE_TAG=${{needs.prepare.outputs.TAG}}" >> $GITHUB_ENV

      - name: Display tag
        run: echo "tag=${{env.RELEASE_TAG}}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Try to pull Docker image
        id: docker_pull
        continue-on-error: true # Continue even if the pull fails
        run: |
          docker pull ${{env.RELEASE_TAG}} && echo "PULL_SUCCEEDED=true" >> $GITHUB_ENV || echo "PULL_SUCCEEDED=false" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: env.PULL_SUCCEEDED == 'false'
        run: |
          DOCKER_IMAGE=${{ env.RELEASE_TAG }}
          docker publish --os linux --arch x64 -p:ContainerImageTag=$DOCKER_IMAGE
          docker push $DOCKER_IMAGE

      - name: Display tag in the Summary
        run: echo "::notice title=Pushing tag::${{env.RELEASE_TAG}}"

    outputs:
      image_digest: ${{ env.RELEASE_TAG }}

  
  checkout_tag:
    needs: [prepare, build_and_push]
    runs-on: ubuntu-latest
    steps:
      - name: Display Tag
        run: |
          if [-z "${{needs.prepare.outputs.TAG}}" ]; then
            echo "Release doesn't exist"
            exit 1
          else
            echo "RELEASE_TAG=${{needs.prepare.outputs.TAG}}" >> $GITHUB_ENV
          fi
    outputs:
      release_tag: ${{ env.RELEASE_TAG}}

  

    